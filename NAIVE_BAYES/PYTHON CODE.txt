import pandas as pd
df = pd.read_csv("titanic.csv")
df.head()
df.info()



df.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis='columns',inplace=True)
df.head()


inputs = df.drop('Survived',axis='columns')
target = df.Survived
inputs.head()


# sex Male=1 Female=2
dummies = pd.get_dummies(inputs.Sex)
dummies


inputs = pd.concat([inputs,dummies],axis='columns')
inputs.head(3)


inputs.drop(['Sex','male'],axis='columns',inplace=True)
inputs.head(3)



### inputs.columns[inputs.isna().any()]
inputs.shape


inputs.Age[:10]
inputs.head(6)


inputs.Age = inputs.Age.fillna(inputs.Age.mean())
inputs.head(6)



from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(inputs,target,test_size=0.3)


from sklearn.naive_bayes import GaussianNB
model = GaussianNB()


model.fit(X_train,y_train)


X_test[0:10]


y_test[0:10]


model.predict(X_test[0:10])


# cross checking


y_predicted = model.predict(X_test)

print('Accuracy on the training subset: {:.3f}'.format(model.score(X_train, y_train)))
print('Accuracy on the test subset: {:.3f}'.format(model.score(X_test, y_test)))

from sklearn.metrics import confusion_matrix
confusion_matrix(y_test,y_predicted)

